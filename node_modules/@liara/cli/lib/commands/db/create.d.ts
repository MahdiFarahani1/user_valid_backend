import Command from '../../base.js';
export default class Create extends Command {
    static description: string;
    static PATH: string;
    static flags: {
        name: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        plan: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        'public-network': import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        type: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        version: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        yes: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        network: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        help: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<void>;
        dev: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        debug: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        'api-token': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        region: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        account: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
    };
    run(): Promise<void>;
    promptHostname(): Promise<string>;
    promptPlan(databaseType: string): Promise<string>;
    promptPublicNetwork(): Promise<string>;
    promptType(): Promise<string>;
    promptVersion(type: string): Promise<string>;
    promptContinue(): Promise<string>;
}
