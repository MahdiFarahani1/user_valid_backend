import Command from '../../base.js';
export interface IEnv {
    key: string;
    value: string;
}
export interface IProject {
    envs: Array<IEnv>;
}
export interface IGetProjectResponse {
    project: IProject;
}
export default class EnvSet extends Command {
    static description: string;
    static strict: boolean;
    static args: {
        env: import("@oclif/core/lib/interfaces/parser.js").Arg<string | undefined, Record<string, unknown>>;
    };
    static flags: {
        app: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        force: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        help: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<void>;
        dev: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        debug: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
        'api-token': import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        region: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
        account: import("@oclif/core/lib/interfaces/parser.js").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser.js").CustomOptions>;
    };
    run(): Promise<void>;
    fetchEnvs(app: string): Promise<IEnv[]>;
    splitWithDelimiter(delimiter: string, string: string): Array<string>;
    removeFirstSyombol(splitedGroup: Array<string>): Array<string>;
    readKeyValue(env: Array<string>): IEnv[];
    confirm(): Promise<boolean>;
}
